Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> declaration
Rule 1     declaration -> ID LARROW value
Rule 2     declaration -> ID EQUALS value
Rule 3     declaration -> value RARROW ID
Rule 4     value -> STRING
Rule 5     value -> NUMBER
Rule 6     value -> BOOLEAN_MISSING

Terminals, with rules where they appear

BOOLEAN_MISSING      : 6
EQUALS               : 2
ID                   : 1 2 3
LARROW               : 1
NUMBER               : 5
RARROW               : 3
STRING               : 4
error                : 

Nonterminals, with rules where they appear

declaration          : 0
value                : 1 2 3

Parsing method: LALR

state 0

    (0) S' -> . declaration
    (1) declaration -> . ID LARROW value
    (2) declaration -> . ID EQUALS value
    (3) declaration -> . value RARROW ID
    (4) value -> . STRING
    (5) value -> . NUMBER
    (6) value -> . BOOLEAN_MISSING

    ID              shift and go to state 2
    STRING          shift and go to state 4
    NUMBER          shift and go to state 5
    BOOLEAN_MISSING shift and go to state 6

    declaration                    shift and go to state 1
    value                          shift and go to state 3

state 1

    (0) S' -> declaration .



state 2

    (1) declaration -> ID . LARROW value
    (2) declaration -> ID . EQUALS value

    LARROW          shift and go to state 7
    EQUALS          shift and go to state 8


state 3

    (3) declaration -> value . RARROW ID

    RARROW          shift and go to state 9


state 4

    (4) value -> STRING .

    RARROW          reduce using rule 4 (value -> STRING .)
    $end            reduce using rule 4 (value -> STRING .)


state 5

    (5) value -> NUMBER .

    RARROW          reduce using rule 5 (value -> NUMBER .)
    $end            reduce using rule 5 (value -> NUMBER .)


state 6

    (6) value -> BOOLEAN_MISSING .

    RARROW          reduce using rule 6 (value -> BOOLEAN_MISSING .)
    $end            reduce using rule 6 (value -> BOOLEAN_MISSING .)


state 7

    (1) declaration -> ID LARROW . value
    (4) value -> . STRING
    (5) value -> . NUMBER
    (6) value -> . BOOLEAN_MISSING

    STRING          shift and go to state 4
    NUMBER          shift and go to state 5
    BOOLEAN_MISSING shift and go to state 6

    value                          shift and go to state 10

state 8

    (2) declaration -> ID EQUALS . value
    (4) value -> . STRING
    (5) value -> . NUMBER
    (6) value -> . BOOLEAN_MISSING

    STRING          shift and go to state 4
    NUMBER          shift and go to state 5
    BOOLEAN_MISSING shift and go to state 6

    value                          shift and go to state 11

state 9

    (3) declaration -> value RARROW . ID

    ID              shift and go to state 12


state 10

    (1) declaration -> ID LARROW value .

    $end            reduce using rule 1 (declaration -> ID LARROW value .)


state 11

    (2) declaration -> ID EQUALS value .

    $end            reduce using rule 2 (declaration -> ID EQUALS value .)


state 12

    (3) declaration -> value RARROW ID .

    $end            reduce using rule 3 (declaration -> value RARROW ID .)

