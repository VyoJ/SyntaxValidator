Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> declaration
Rule 1     declaration -> ID LARROW FUNC LPAREN args RPAREN LBRACE statement RBRACE
Rule 2     args -> empty
Rule 3     args -> argslist
Rule 4     argslist -> ID
Rule 5     argslist -> ID COMMA argslist
Rule 6     statement -> var_declare statement
Rule 7     statement -> var_declare
Rule 8     var_declare -> ID LARROW STRING
Rule 9     var_declare -> ID LARROW NUMBER
Rule 10    empty -> <empty>

Terminals, with rules where they appear

COMMA                : 5
FUNC                 : 1
ID                   : 1 4 5 8 9
LARROW               : 1 8 9
LBRACE               : 1
LPAREN               : 1
NUMBER               : 9
RBRACE               : 1
RPAREN               : 1
STRING               : 8
error                : 

Nonterminals, with rules where they appear

args                 : 1
argslist             : 3 5
declaration          : 0
empty                : 2
statement            : 1 6
var_declare          : 6 7

Parsing method: LALR

state 0

    (0) S' -> . declaration
    (1) declaration -> . ID LARROW FUNC LPAREN args RPAREN LBRACE statement RBRACE

    ID              shift and go to state 2

    declaration                    shift and go to state 1

state 1

    (0) S' -> declaration .



state 2

    (1) declaration -> ID . LARROW FUNC LPAREN args RPAREN LBRACE statement RBRACE

    LARROW          shift and go to state 3


state 3

    (1) declaration -> ID LARROW . FUNC LPAREN args RPAREN LBRACE statement RBRACE

    FUNC            shift and go to state 4


state 4

    (1) declaration -> ID LARROW FUNC . LPAREN args RPAREN LBRACE statement RBRACE

    LPAREN          shift and go to state 5


state 5

    (1) declaration -> ID LARROW FUNC LPAREN . args RPAREN LBRACE statement RBRACE
    (2) args -> . empty
    (3) args -> . argslist
    (10) empty -> .
    (4) argslist -> . ID
    (5) argslist -> . ID COMMA argslist

    RPAREN          reduce using rule 10 (empty -> .)
    ID              shift and go to state 6

    args                           shift and go to state 7
    empty                          shift and go to state 8
    argslist                       shift and go to state 9

state 6

    (4) argslist -> ID .
    (5) argslist -> ID . COMMA argslist

    RPAREN          reduce using rule 4 (argslist -> ID .)
    COMMA           shift and go to state 10


state 7

    (1) declaration -> ID LARROW FUNC LPAREN args . RPAREN LBRACE statement RBRACE

    RPAREN          shift and go to state 11


state 8

    (2) args -> empty .

    RPAREN          reduce using rule 2 (args -> empty .)


state 9

    (3) args -> argslist .

    RPAREN          reduce using rule 3 (args -> argslist .)


state 10

    (5) argslist -> ID COMMA . argslist
    (4) argslist -> . ID
    (5) argslist -> . ID COMMA argslist

    ID              shift and go to state 6

    argslist                       shift and go to state 12

state 11

    (1) declaration -> ID LARROW FUNC LPAREN args RPAREN . LBRACE statement RBRACE

    LBRACE          shift and go to state 13


state 12

    (5) argslist -> ID COMMA argslist .

    RPAREN          reduce using rule 5 (argslist -> ID COMMA argslist .)


state 13

    (1) declaration -> ID LARROW FUNC LPAREN args RPAREN LBRACE . statement RBRACE
    (6) statement -> . var_declare statement
    (7) statement -> . var_declare
    (8) var_declare -> . ID LARROW STRING
    (9) var_declare -> . ID LARROW NUMBER

    ID              shift and go to state 14

    statement                      shift and go to state 15
    var_declare                    shift and go to state 16

state 14

    (8) var_declare -> ID . LARROW STRING
    (9) var_declare -> ID . LARROW NUMBER

    LARROW          shift and go to state 17


state 15

    (1) declaration -> ID LARROW FUNC LPAREN args RPAREN LBRACE statement . RBRACE

    RBRACE          shift and go to state 18


state 16

    (6) statement -> var_declare . statement
    (7) statement -> var_declare .
    (6) statement -> . var_declare statement
    (7) statement -> . var_declare
    (8) var_declare -> . ID LARROW STRING
    (9) var_declare -> . ID LARROW NUMBER

    RBRACE          reduce using rule 7 (statement -> var_declare .)
    ID              shift and go to state 14

    var_declare                    shift and go to state 16
    statement                      shift and go to state 19

state 17

    (8) var_declare -> ID LARROW . STRING
    (9) var_declare -> ID LARROW . NUMBER

    STRING          shift and go to state 20
    NUMBER          shift and go to state 21


state 18

    (1) declaration -> ID LARROW FUNC LPAREN args RPAREN LBRACE statement RBRACE .

    $end            reduce using rule 1 (declaration -> ID LARROW FUNC LPAREN args RPAREN LBRACE statement RBRACE .)


state 19

    (6) statement -> var_declare statement .

    RBRACE          reduce using rule 6 (statement -> var_declare statement .)


state 20

    (8) var_declare -> ID LARROW STRING .

    ID              reduce using rule 8 (var_declare -> ID LARROW STRING .)
    RBRACE          reduce using rule 8 (var_declare -> ID LARROW STRING .)


state 21

    (9) var_declare -> ID LARROW NUMBER .

    ID              reduce using rule 9 (var_declare -> ID LARROW NUMBER .)
    RBRACE          reduce using rule 9 (var_declare -> ID LARROW NUMBER .)

