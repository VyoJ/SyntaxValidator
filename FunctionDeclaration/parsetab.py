
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA FUNC ID LARROW LBRACE LPAREN RBRACE RPAREN\n    declaration : ID LARROW FUNC LPAREN args RPAREN LBRACE statement RBRACE\n    \n    args    :   empty \n            |   ID\n            |   ID COMMA args\n    \n    statement   :   ID statement\n                |   ID\n    \n    empty   :\n    '
    
_lr_action_items = {'ID':([0,5,9,12,13,],[2,6,6,13,13,]),'$end':([1,16,],[0,-1,]),'LARROW':([2,],[3,]),'FUNC':([3,],[4,]),'LPAREN':([4,],[5,]),'RPAREN':([5,6,7,8,9,11,],[-7,-3,10,-2,-7,-4,]),'COMMA':([6,],[9,]),'LBRACE':([10,],[12,]),'RBRACE':([13,14,15,],[-6,16,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([0,],[1,]),'args':([5,9,],[7,11,]),'empty':([5,9,],[8,8,]),'statement':([12,13,],[14,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaration","S'",1,None,None,None),
  ('declaration -> ID LARROW FUNC LPAREN args RPAREN LBRACE statement RBRACE','declaration',9,'p_declaration','func_yacc.py',9),
  ('args -> empty','args',1,'p_args','func_yacc.py',15),
  ('args -> ID','args',1,'p_args','func_yacc.py',16),
  ('args -> ID COMMA args','args',3,'p_args','func_yacc.py',17),
  ('statement -> ID statement','statement',2,'p_statement','func_yacc.py',22),
  ('statement -> ID','statement',1,'p_statement','func_yacc.py',23),
  ('empty -> <empty>','empty',0,'p_empty','func_yacc.py',28),
]
